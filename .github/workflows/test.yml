name: Run test suites
on:
  schedule:
    - cron: "0 5 * * *"
  push:
    branches:
      - main
env:
  RECORD_REPLAY_API_KEY: rwk_67oZlwB0FjMlwawb02pYRB4Fenf0YSD9xIGzQrMEnB3

jobs:
  generate-test-run-id:
    name: Generate Test Run ID
    runs-on: ubuntu-latest
    steps:
      - run: yarn add uuid
        shell: sh
      - uses: actions/github-script@v6
        id: uuid
        with:
          result-encoding: string
          script: return require("uuid").v4()
    outputs:
      testRunId: ${{ steps.uuid.outputs.result }}
  e2etest:
    name: End-to-end tests (${{ matrix.shard }})
    runs-on: ${{ matrix.platform }}
    needs: [generate-test-run-id]
    strategy:
      # GH cancels other matrixed jobs by default if one fails. We want all E2E jobs to complete.
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        shard: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"]
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: "16"
      # Get the yarn cache path.
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - name: Restore yarn cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            **/node_modules
          key: yarn-cache-folder-${{ matrix.platform }}-${{ hashFiles('**/yarn.lock', '.yarnrc.yml') }}
          restore-keys: "yarn-cache-folder-"
      # Actually install packages with Yarn
      - name: Install packages
        run: yarn install
        env:
          YARN_CHECKSUM_BEHAVIOR: "update"
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
      - name: Install Replay Playwright
        run: npx @replayio/playwright install
      - uses: replayio/action-playwright@main
        with:
          command: npx playwright test --shard ${{ matrix.shard }}/10 --reporter=@replayio/playwright/reporter,line tests/*.ts
          working-directory: ./packages/e2e-tests
          api-key: ${{ env.RECORD_REPLAY_API_KEY }}
          public: true
          upload-all: true
          project: replay-chromium
        env:
          RECORD_REPLAY_METADATA_TEST_RUN_ID: ${{ needs.generate-test-run-id.outputs.testRunId }}
          PLAYWRIGHT_TEST_BASE_URL: https://app.replay.io
          INPUT_STRIPE: ${{ matrix.shard }}/10
          RECORD_REPLAY_WEBHOOK_URL: ${{ secrets.RECORD_REPLAY_WEBHOOK_URL }}
          RECORD_REPLAY_TEST_METRICS: 1
          RECORD_REPLAY_METADATA_TEST_RUN_TITLE: E2E Tests - ${{ matrix.platform }}